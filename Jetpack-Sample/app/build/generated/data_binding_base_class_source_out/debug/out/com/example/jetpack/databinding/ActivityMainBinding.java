// Generated by data binding compiler. Do not edit!
package com.example.jetpack.databinding;

import android.util.SparseArray;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.jetpack.R;
import java.lang.Deprecated;
import java.lang.Object;
import java.util.List;
import java.util.Map;

public abstract class ActivityMainBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout root;

  @Bindable
  protected List<String> mList;

  @Bindable
  protected SparseArray<String> mSparse;

  @Bindable
  protected Map<String, String> mMap;

  @Bindable
  protected int mIndex;

  @Bindable
  protected String mKey;

  protected ActivityMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout root) {
    super(_bindingComponent, _root, _localFieldCount);
    this.root = root;
  }

  public abstract void setList(@Nullable List<String> list);

  @Nullable
  public List<String> getList() {
    return mList;
  }

  public abstract void setSparse(@Nullable SparseArray<String> sparse);

  @Nullable
  public SparseArray<String> getSparse() {
    return mSparse;
  }

  public abstract void setMap(@Nullable Map<String, String> map);

  @Nullable
  public Map<String, String> getMap() {
    return mMap;
  }

  public abstract void setIndex(int index);

  public int getIndex() {
    return mIndex;
  }

  public abstract void setKey(@Nullable String key);

  @Nullable
  public String getKey() {
    return mKey;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityMainBinding>inflateInternal(inflater, R.layout.activity_main, null, false, component);
  }

  public static ActivityMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (ActivityMainBinding)bind(component, view, R.layout.activity_main);
  }
}
